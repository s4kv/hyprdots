# Hyprfocus
# https://github.com/daxisunder/hyprfocus
plugin {
  hyprfocus {
    enabled = yes
    animate_floating = no
    animate_workspacechange = no
    focus_animation = flash
      # Beziers for focus animations
    bezier = bezIn, 0.5, 0.0, 1.0, 0.5
    bezier = bezOut, 0.0, 0.5, 0.5, 1.0
    bezier = overshot, 0.05, 0.9, 0.1, 1.05
    bezier = smoothOut, 0.36, 0, 0.66, -0.56
    bezier = smoothIn, 0.25, 1, 0.5, 1
    bezier = realsmooth, 0.28, 0.29, 0.69, 1.08
    bezier = easeInOutBack, 0.68, -0.6, 0.32, 1.6
      # Flash settings
    flash {
      flash_opacity = 0.7
      in_bezier = bezIn
      in_speed = 0.1
      out_bezier = bezOut
      out_speed = 1
    }
      # Shrink settings
    shrink {
      shrink_percentage = 0.99
      in_bezier = easeInOutBack
      in_speed = 1
      out_bezier = easeInOutBack
      out_speed = 1
    }
  }
}

# # Hyprspace
#
bind = SUPER, grave, overview:toggle
plugin:overview:disableBlur = true

## gaps
plugin:overview:affectStrut = false
# plugin:overview:overrideGaps = 0

plugin:overview:exitOnClick = true
plugin:overview:onBottom = false
#
#
# # Hyprexpo
#
# bind = SUPER SHIFT, grave, hyprexpo:expo, toggle # can be: toggle, select, off/disable or on/enable
#
# plugin {
#     hyprexpo {
#         columns = 5
#         gap_size = 5
#         bg_col = rgb(111111)
#         workspace_method = center current # [center/first] [workspace] e.g. first 1 or center m+1
#
#         # enable_gesture = true # laptop touchpad
#         # gesture_fingers = 3  # 3 or 4
#         # gesture_distance = 300 # how far is the "max"
#         # gesture_positive = true # positive = swipe down. Negative = swipe up.
#   }
# }
#
# # Hyprwinwrap
# # plugin {
# #     hyprwinwrap {
# #         # class is an EXACT match and NOT a regex!
# #         class = kitty-bg
# #     }
# # }
#
# plugin:dynamic-cursors {
#
#     # enables the plugin
#     enabled = true
#
#     # sets the cursor behaviour, supports these values:
#     # tilt    - tilt the cursor based on x-velocity
#     # rotate  - rotate the cursor based on movement direction
#     # stretch - stretch the cursor shape based on direction and velocity
#     # none    - do not change the cursors behaviour
#     mode = tilt
#
#     # minimum angle difference in degrees after which the shape is changed
#     # smaller values are smoother, but more expensive for hw cursors
#     threshold = 2
#
#     # override the mode behaviour per shape
#     # this is a keyword and can be repeated many times
#     # by default, there are no rules added
#     # see the dedicated `shape rules` section below!
#     # shaperule = <shape-name>, <mode> (optional), <property>: <value>, ...
#     # shaperule = <shape-name>, <mode> (optional), <property>: <value>, ...
#     # ...
#
#     # for mode = rotate
#     rotate {
#
#         # length in px of the simulated stick used to rotate the cursor
#         # most realistic if this is your actual cursor size
#         length = 20
#
#         # clockwise offset applied to the angle in degrees
#         # this will apply to ALL shapes
#         offset = 0.0
#     }
#
#     # for mode = tilt
#     tilt {
#
#         # controls how powerful the tilt is, the lower, the more power
#         # this value controls at which speed (px/s) the full tilt is reached
#         # the full tilt being 60Â° in both directions
#         limit = 5000
#
#         # relationship between speed and tilt, supports these values:
#         # linear             - a linear function is used
#         # quadratic          - a quadratic function is used (most realistic to actual air drag)
#         # negative_quadratic - negative version of the quadratic one, feels more aggressive
#         # see `activation` in `src/mode/utils.cpp` for how exactly the calculation is done
#         function = negative_quadratic
#
#         # time window (ms) over which the speed is calculated
#         # higher values will make slow motions smoother but more delayed
#         window = 100
#     }
#
#     # for mode = stretch
#     stretch {
#
#         # controls how much the cursor is stretched
#         # this value controls at which speed (px/s) the full stretch is reached
#         # the full stretch being twice the original length
#         limit = 3000
#
#         # relationship between speed and stretch amount, supports these values:
#         # linear             - a linear function is used
#         # quadratic          - a quadratic function is used
#         # negative_quadratic - negative version of the quadratic one, feels more aggressive
#         # see `activation` in `src/mode/utils.cpp` for how exactly the calculation is done
#         function = quadratic
#
#         # time window (ms) over which the speed is calculated
#         # higher values will make slow motions smoother but more delayed
#         window = 100
#     }
#
#     # configure shake to find
#     # magnifies the cursor if its is being shaken
#     shake {
#
#         # enables shake to find
#         enabled = false
#
#         # use nearest-neighbour (pixelated) scaling when shaking
#         # may look weird when effects are enabled
#         nearest = true
#
#         # controls how soon a shake is detected
#         # lower values mean sooner
#         threshold = 6.0
#
#         # magnification level immediately after shake start
#         base = 4.0
#         # magnification increase per second when continuing to shake
#         speed = 4.0
#         # how much the speed is influenced by the current shake intensitiy
#         influence = 0.0
#
#         # maximal magnification the cursor can reach
#         # values below 1 disable the limit (e.g. 0)
#         limit = 0.0
#
#         # time in millseconds the cursor will stay magnified after a shake has ended
#         timeout = 2000
#
#         # show cursor behaviour `tilt`, `rotate`, etc. while shaking
#         effects = false
#
#         # enable ipc events for shake
#         # see the `ipc` section below
#         ipc = false
#     }
#
#     # use hyprcursor to get a higher resolution texture when the cursor is magnified
#     # see the `hyprcursor` section below
#     hyprcursor {
#
#         # use nearest-neighbour (pixelated) scaling when magnifing beyond texture size
#         # this will also have effect without hyprcursor support being enabled
#         # 0 / false - never use pixelated scaling
#         # 1 / true  - use pixelated when no highres image
#         # 2         - always use pixleated scaling
#         nearest = true
#
#         # enable dedicated hyprcursor support
#         enabled = true
#
#         # resolution in pixels to load the magnified shapes at
#         # be warned that loading a very high-resolution image will take a long time and might impact memory consumption
#         # -1 means we use [normal cursor size] * [shake:base option]
#         resolution = -1
#
#         # shape to use when clientside cursors are being magnified
#         # see the shape-name property of shape rules for possible names
#         # specifying clientside will use the actual shape, but will be pixelated
#         fallback = clientside
#     }
# }
